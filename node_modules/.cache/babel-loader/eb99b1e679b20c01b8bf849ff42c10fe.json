{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-crud-php-api-mysql/src/components/ListPost.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListPost() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  function getPosts() {\n    axios.get('http://localhost/react-crud-php-api-mysql/api/posts/').then(function (response) {\n      console.log(response.data);\n      setPosts(response.data);\n    });\n  }\n\n  const deletePost = id => {\n    axios.delete(`http://localhost/react-crud-php-api-mysql/api/post/${id}/delete`).then(function (response) {\n      console.log(response.data);\n      getPosts();\n    });\n  };\n\n  const filterBySearch = event => {\n    // Access input value\n    const query = event.target.value;\n    console.log(query); // Create copy of item list\n\n    var updatedList = [...posts]; // Include all elements which includes the search query\n\n    updatedList = updatedList.filter(item => {\n      return item.title.toLowerCase().indexOf(query.toLowerCase()) !== -1;\n    }); // Trigger render with updated values\n\n    setPosts(updatedList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-text\",\n        children: \"Search:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search-box\",\n        onChange: filterBySearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        class: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Slug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: posts.map((post, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.slug\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              className: \"btn btn-primary\",\n              to: `post/${post.id}/edit`,\n              style: {\n                marginRight: \"10px\"\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => deletePost(post.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListPost, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = ListPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListPost\");","map":{"version":3,"sources":["/var/www/html/react-crud-php-api-mysql/src/components/ListPost.js"],"names":["axios","useEffect","useState","Link","ListPost","posts","setPosts","getPosts","get","then","response","console","log","data","deletePost","id","delete","filterBySearch","event","query","target","value","updatedList","filter","item","title","toLowerCase","indexOf","map","post","key","slug","content","marginRight"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,QAAT,GAAoB;AAChBP,IAAAA,KAAK,CAACQ,GAAN,CAAU,sDAAV,EAAkEC,IAAlE,CAAuE,UAASC,QAAT,EAAmB;AACtFC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAP,MAAAA,QAAQ,CAACI,QAAQ,CAACG,IAAV,CAAR;AACH,KAHD;AAKH;;AAGD,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AACvBf,IAAAA,KAAK,CAACgB,MAAN,CAAc,sDAAqDD,EAAG,SAAtE,EAAgFN,IAAhF,CAAqF,UAASC,QAAT,EAAkB;AACnGC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAN,MAAAA,QAAQ;AACX,KAHD;AAIH,GALD;;AAQF,QAAMU,cAAc,GAAIC,KAAD,IAAW;AAC5B;AACA,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ,EAH4B,CAI5B;;AACA,QAAIG,WAAW,GAAG,CAAC,GAAGjB,KAAJ,CAAlB,CAL4B,CAM5B;;AACAiB,IAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAoBC,IAAD,IAAU;AAC3C,aAAOA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,OAAzB,CAAiCR,KAAK,CAACO,WAAN,EAAjC,MAA0D,CAAC,CAAlE;AACH,KAFiB,CAAd,CAP4B,CAUhC;;AACApB,IAAAA,QAAQ,CAACgB,WAAD,CAAR;AAED,GAbD;;AAeE,sBAEI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAES;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAO,QAAA,EAAE,EAAC,YAAV;AAAuB,QAAA,QAAQ,EAAEL;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFT,eAQY;AAAO,MAAA,KAAK,EAAC,OAAb;AAAA,8BACA;AAAO,QAAA,KAAK,EAAC,YAAb;AAAA,+BACA;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,eAUJ;AAAA,kBACKZ,KAAK,CAACuB,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,kBACP;AAAA,kCACI;AAAA,sBAAKD,IAAI,CAACd;AAAV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKc,IAAI,CAACJ;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKI,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,iBAAhB;AAAkC,cAAA,EAAE,EAAG,QAAOH,IAAI,CAACd,EAAG,OAAtD;AAA8D,cAAA,KAAK,EAAE;AAACkB,gBAAAA,WAAW,EAAE;AAAd,eAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,SAAS,EAAC,gBAAlB;AAAmC,cAAA,OAAO,EAAE,MAAMnB,UAAU,CAACe,IAAI,CAACd,EAAN,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAASe,GAAT;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAVI;AAAA;AAAA;AAAA;AAAA;AAAA,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsCH;;GA/EuB1B,Q;;KAAAA,Q","sourcesContent":["import axios from \"axios\"\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function ListPost() {\n\n    const [posts, setPosts] = useState([]);\n        \n\n    useEffect(() => {\n        getPosts();\n    }, []);\n\n    function getPosts() {\n        axios.get('http://localhost/react-crud-php-api-mysql/api/posts/').then(function(response) {\n            console.log(response.data);\n            setPosts(response.data);\n        });\n\n    }\n    \n\n    const deletePost = (id) => {\n        axios.delete(`http://localhost/react-crud-php-api-mysql/api/post/${id}/delete`).then(function(response){\n            console.log(response.data);\n            getPosts();\n        });\n    }\n\n\n  const filterBySearch = (event) => {\n        // Access input value\n        const query = event.target.value;\n        console.log(query);\n        // Create copy of item list\n        var updatedList = [...posts];\n        // Include all elements which includes the search query\n        updatedList = updatedList.filter((item) => {\n        return item.title.toLowerCase().indexOf(query.toLowerCase()) !== -1;\n    });\n    // Trigger render with updated values\n    setPosts(updatedList);\n\n  };\n\n    return (\n    \n        <div>\n            <h1>List Posts</h1>\n                 <div className=\"search-header\">\n                    <div className=\"search-text\">Search:</div>\n                    <input id=\"search-box\" onChange={filterBySearch} />\n                  </div>\n\n\n                    <table class=\"table\">                \n                    <thead class=\"thead-dark\">\n                    <tr>\n                        <th>#</th>\n                        <th>Title</th>\n                        <th>Slug</th>\n                        <th>Content</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {posts.map((post, key) =>\n                        <tr key={key}>\n                            <td>{post.id}</td>\n                            <td>{post.title}</td>\n                            <td>{post.slug}</td>\n                            <td>{post.content}</td>\n                            <td>\n                                <Link className=\"btn btn-primary\" to={`post/${post.id}/edit`} style={{marginRight: \"10px\"}}>Edit</Link>\n                                <button className=\"btn btn-danger\" onClick={() => deletePost(post.id)}>Delete</button>\n                            </td>\n                        </tr>\n                    )}\n                    \n                </tbody>\n            </table>\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}